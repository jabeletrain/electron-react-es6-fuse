{"version":3,"sources":["main.js","packages/default"],"names":["path","require","url","mainWindow","createWindow","console","log","width","height","loadURL","format","pathname","join","__dirname","protocol","slashes","webContents","openDevTools","on","create","process","platform","quit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AACA;;AAGA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;AACA,IAAMC,MAAMD,QAAQ,KAAR,CAAZ;AACA;;;AAIA;AACA;AACA,IAAIE,mBAAJ;;AAEA,SAASC,YAAT,GAAyB;;AAEvBC,UAAQC,GAAR,CAAY,wBAAZ;;AAEA;AACAH,eAAa,4BAAkB,EAACI,OAAO,IAAR,EAAcC,QAAQ,GAAtB,EAAlB,CAAb;;AAEA;AACAL,aAAWM,OAAX,CAAmBP,IAAIQ,MAAJ,CAAW;AAC5BC,cAAUX,KAAKY,IAAL,CAAUC,SAAV,EAAqB,qBAArB,CADkB;AAE5BC,cAAU,OAFkB;AAG5BC,aAAS;AAHmB,GAAX,CAAnB;;AAMA;AACAZ,aAAWa,WAAX,CAAuBC,YAAvB;;AAEA;AACAd,aAAWe,EAAX,CAAc,QAAd,EAAwB,YAAY;AAClC;AACA;AACA;AACAf,iBAAa,IAAb;AACD,GALD;AAMA,0BAAOgB,MAAP,CAAchB,UAAd;AACD;;AAED;AACA;AACA;AACA,cAAIe,EAAJ,CAAO,OAAP,EAAgBd,YAAhB;;AAEA;AACA,cAAIc,EAAJ,CAAO,mBAAP,EAA4B,YAAY;AACtC;AACA;AACA,MAAIE,QAAQC,QAAR,KAAqB,QAAzB,EAAmC;AACjC,kBAAIC,IAAJ;AACD;AACF,CAND;;AAQA,cAAIJ,EAAJ,CAAO,UAAP,EAAmB,YAAY;AAC7B;AACA;AACA,MAAIf,eAAe,IAAnB,EAAyB;AACvjfile":"","sourcesContent":["\nimport { app, BrowserWindow } from 'electron';\nimport { client } from 'electron-connect';\n\n\nconst path = require('path')\nconst url = require('url')\n//Live-reloader\n\n\n\n// Keep a global reference of the window object, if you don't, the window will\n// be closed automatically when the JavaScript object is garbage collected.\nlet mainWindow\n\nfunction createWindow () {\n\n  console.log('create window -- yes..');\n\n  // Create the browser window.\n  mainWindow = new BrowserWindow({width: 1024, height: 600})\n\n  // and load the index.html of the app.\n  mainWindow.loadURL(url.format({\n    pathname: path.join(__dirname, '../build/index.html'),\n    protocol: 'file:',\n    slashes: true\n  }))\n\n  // Open the DevTools.\n  mainWindow.webContents.openDevTools()\n\n  // Emitted when the window is closed.\n  mainWindow.on('closed', function () {\n    // Dereference the window object, usually you would store windows\n    // in an array if your app supports multi windows, this is the time\n    // when you should delete the corresponding element.\n    mainWindow = null\n  })\n  client.create(mainWindow);\n}\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// Some APIs can only be used after this event occurs.\napp.on('ready', createWindow)\n\n// Quit when all windows are closed.\napp.on('window-all-closed', function () {\n  // On OS X it is common for applications and their menu bar\n  // to stay active until the user quits explicitly with Cmd + Q\n  if (process.platform !== 'darwin') {\n    app.quit()\n  }\n})\n\napp.on('activate', function () {\n  // On OS X it's common to re-create a window in the app when the\n  // dock icon is clicked and there are no other windows open.\n  if (mainWindow === null) {\n    createWindow()\n  }\n})\n\n// In this file you can include the rest of your app's specific main process\n// code. You can also put them in separate files and require them here.\n",null]}